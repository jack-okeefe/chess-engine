use std::collections::HashMap;

use crate::pieces::Piece;
use crate::pieces::{
    BLACK_BISHOP, BLACK_KING, BLACK_KNIGHT, BLACK_PAWN, BLACK_QUEEN, BLACK_ROOK, WHITE_BISHOP,
    WHITE_KING, WHITE_KNIGHT, WHITE_PAWN, WHITE_QUEEN, WHITE_ROOK,
};

pub const FILE_A: u64 = 0b0000000100000001000000010000000100000001000000010000000100000001;
pub const FILE_H: u64 = 0b1000000010000000100000001000000010000000100000001000000010000000;
pub const RANK_1: u64 = 0b0000000000000000000000000000000000000000000000000000000011111111;
pub const RANK_8: u64 = 0b1111111100000000000000000000000000000000000000000000000000000000;

pub fn get_piece_at_index(position: &HashMap<Piece, u64>, square: &u64) -> Option<Piece> {
    for (piece, bitboard) in position {
        if (bitboard & square) != 0 {
            return Some(*piece);
        }
    }
    None
}

pub fn get_starting_position() -> HashMap<Piece, u64> {
    let mut starting_position: HashMap<Piece, u64> = HashMap::new();
    // all 0's to copy/paste
    // 0b0000000000000000000000000000000000000000000000000000000000000000
    starting_position.insert(
        WHITE_PAWN,
        0b0000000000000000000000000000000000000000000000001111111100000000,
    );
    starting_position.insert(
        WHITE_KNIGHT,
        0b0000000000000000000000000000000000000000000000000000000001000010,
    );
    starting_position.insert(
        WHITE_BISHOP,
        0b0000000000000000000000000000000000000000000000000000000000100100,
    );
    starting_position.insert(
        WHITE_ROOK,
        0b0000000000000000000000000000100000000000000000000000000010000001,
    );
    starting_position.insert(
        WHITE_QUEEN,
        0b0000000000000000000000000000000000000000000000000000000000001000,
    );
    starting_position.insert(
        WHITE_KING,
        0b0000000000000000000000000000000000000000000000000000000000010000,
    );
    starting_position.insert(
        BLACK_PAWN,
        0b0000000011111111000000000000000000000000000000000000000000000000,
    );
    starting_position.insert(
        BLACK_KNIGHT,
        0b0100001000000000000000000000000000000000000000000000000000000000,
    );
    starting_position.insert(
        BLACK_BISHOP,
        0b0010010000000000000000000000000000000000000000000000000000000000,
    );
    starting_position.insert(
        BLACK_ROOK,
        0b1000000100000000000000000000000000000000000000000000000000000000,
    );
    starting_position.insert(
        BLACK_QUEEN,
        0b0000100000000000000000000000000000000000000000000000000000000000,
    );
    starting_position.insert(
        BLACK_KING,
        0b0001000000000000000000000000000000000000000000000000000000000000,
    );
    starting_position
}
